{"version":3,"sources":["add_event_form.js","add_user.js","App.js","reportWebVitals.js","index.js"],"names":["AddForm","clickedDate","addEvent","modalVisible","useState","name","setName","email","setEmail","phone","setPhone","start_time","setStartTime","end_time","setEndTime","stadiumid","URLSearchParams","window","location","search","get","onSubmit","e","preventDefault","id","className","onChange","target","value","type","placeholder","disabled","htmlFor","AddUser","addUser","setClickEventTotalUsers","clickEventTotalUsers","setUserModalVisible","App","React","visible","setVisible","confirmLoading","setConfirmLoading","setClickedData","stadium","console","log","selectedDay","setSelectedDay","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","setSelectedStadium","locales","require","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","myEventsList","setMyEventsList","fetchEvents","axios","then","response","data","forEach","index","date","split","year","parseInt","month","day","prevData","start","Date","end","title","total_users","useEffect","clickEventID","setClickEventID","clickEventName","setClickEventName","clickEventEmail","setClickEventEmail","clickEventPhone","setClickEventPhone","clickEventDate","setClickEventDate","clickEventStartTime","setClickEventStartTime","clickEventEndTime","setClickEventEndTime","clickEventStadium","setClickEventStadium","eventModalVisible","setEventModalVisible","eventConfirmLoading","setEventConfirmLoading","userModalVisible","userConfirmLoading","setUserConfirmLoading","selectable","events","startAccessor","endAccessor","style","height","onSelectEvent","event","handleEventClick","onSelectSlot","getDate","getMonth","getFullYear","toString","handleClick","onOk","onCancel","post","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a7de59f.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport TimePicker from 'react-time-picker'\r\nimport axios from 'axios';\r\nconst AddForm = ({clickedDate, addEvent, modalVisible}) => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [start_time, setStartTime] = useState('12:00')\r\n    const [end_time, setEndTime] = useState('12:00')\r\n    const query = new URLSearchParams(window.location.search);\r\n    const stadiumid = query.get('stadium')\r\n    \r\n    const handleChangeName = (e) => {\r\n        let name = e.target.value;\r\n        setName(name)\r\n    }\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const handleChangePhone = (e) => {\r\n        setPhone(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        addEvent({\r\n            \"name\": name,\r\n            \"email\": email,\r\n            \"phone\": phone,\r\n            \"date\": clickedDate,\r\n            \"start_time\": start_time,\r\n            \"end_time\": end_time,\r\n            \"stadium\":stadiumid\r\n        })\r\n        modalVisible(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id=\"form\">\r\n            <div className=\"flex-wrapper\">\r\n                <div className=\"row mr-1\">\r\n\r\n                    <input onChange={handleChangeName} className=\"form-control m-1\" id=\"name\"\r\n                           type=\"text\" name=\"name\"\r\n                           placeholder=\"Event Name\"/>\r\n\r\n                    <input className=\"form-control m-1\"\r\n                           id=\"email\"\r\n                           onChange={handleChangeEmail}\r\n                           type=\"email\" name=\"email\"\r\n                           placeholder=\"email\"/>\r\n\r\n                    <input onChange={handleChangePhone} className=\"form-control m-1\" id=\"phone\"\r\n                           type=\"text\" name=\"phone\"\r\n                           placeholder=\"Phone Number\"/>\r\n\r\n                    <input className=\"form-control m-1\" disabled value={clickedDate}/>\r\n                     <input className=\"form-control m-1\" disabled value={\"Stadium ID: \"+stadiumid} />\r\n                    <div className=\"col-md-12 m-1\">\r\n                        <label htmlFor=\"startdate\">Start Time</label>\r\n                        <TimePicker id='startdate'\r\n                                    onChange={setStartTime}\r\n                                    value={start_time}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12 m-1\">\r\n                        <label htmlFor=\"enddate\">End Time</label>\r\n                        <TimePicker id='enddate'\r\n                                    onChange={setEndTime}\r\n                                    value={end_time}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n    \r\n}\r\n\r\nexport default AddForm;\r\n","import React, {useState} from \"react\";\r\n\r\n\r\nconst AddUser = ({addUser, setClickEventTotalUsers, clickEventTotalUsers, setUserModalVisible}) => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const handleChangeName = (e) => {\r\n        let name = e.target.value;\r\n        setName(name)\r\n    }\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        addUser({\r\n            \"name\": name,\r\n            \"email\": email,\r\n        })\r\n        setClickEventTotalUsers(clickEventTotalUsers + 1)\r\n        setUserModalVisible(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id=\"form\">\r\n            <div className=\"flex-wrapper\">\r\n                <div className=\"row mr-1\">\r\n\r\n                    <input onChange={handleChangeName} className=\"form-control m-1\" id=\"name\"\r\n                           type=\"text\" name=\"name\"\r\n                           placeholder=\"User Name\"/>\r\n\r\n                    <input className=\"form-control m-1\"\r\n                           id=\"email\"\r\n                           onChange={handleChangeEmail}\r\n                           type=\"email\" name=\"email\"\r\n                           placeholder=\"User Email\"/>\r\n\r\n                </div>\r\n                <input id=\"submit\" className=\"btn btn-primary\" type=\"submit\" name=\"Add\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddUser;","import React, {useEffect} from \"react\";\r\nimport {Calendar, dateFnsLocalizer} from \"react-big-calendar\";\r\nimport format from \"date-fns/format\";\r\nimport parse from \"date-fns/parse\";\r\nimport startOfWeek from \"date-fns/startOfWeek\";\r\nimport getDay from \"date-fns/getDay\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport {Modal} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport AddForm from \"./add_event_form\";\r\nimport AddUser from \"./add_user\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n    const [clickedDate, setClickedData] = React.useState(null);\r\n    const query = new URLSearchParams(window.location.search);\r\n    const stadium = query.get('stadium')\r\n    console.log('stadium='+stadium)\r\n\r\n    const [selectedDay, setSelectedDay] = React.useState(null);\r\n    const [selectedMonth, setSelectedMonth] = React.useState(null);\r\n    const [selectedYear, setSelectedYear] = React.useState(null);\r\n    const [selectedStadium, setSelectedStadium] = React.useState(null);\r\n    const locales = {\r\n        \"en-US\": require(\"date-fns/locale/en-US\")\r\n    };\r\n    const localizer = dateFnsLocalizer({\r\n        format,\r\n        parse,\r\n        startOfWeek,\r\n        getDay,\r\n        locales\r\n    });\r\n    const [myEventsList, setMyEventsList] = React.useState([]);\r\n\r\n    const handleClick = (data) => {\r\n\r\n        let date = data.start.getDate()\r\n        let month = data.start.getMonth()\r\n        let year = data.start.getFullYear()\r\n        const query = new URLSearchParams(window.location.search);\r\n        const stadiumid = query.get('stadium')\r\n        setSelectedStadium(stadium)\r\n        setSelectedDay(date)\r\n        setSelectedMonth(month)\r\n        setSelectedYear(year)\r\n\r\n        setClickedData(year.toString() + \"-\" + (month + 1).toString() + \"-\" + date.toString())\r\n        console.log(clickedDate)\r\n        setVisible(true);\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setConfirmLoading(true);\r\n        setVisible(false);\r\n        setConfirmLoading(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const addEvent = (e) => {\r\n        console.log(e)\r\n        axios.post('https://api.dreampotential.org/bookingstadium/bookings/', e)\r\n            .then(response => {\r\n                console.log(response)\r\n                setMyEventsList(\r\n                    prevData => [...prevData, {\r\n                        id: response.id,\r\n                        start: new Date(selectedYear, selectedMonth, selectedDay),\r\n                        end: new Date(selectedYear, selectedMonth, selectedDay),\r\n                        title: response.data.name,\r\n                        email: response.data.email,\r\n                        phone: response.data.phone,\r\n                        date: response.data.date,\r\n                        start_time: response.data.start_time,\r\n                        end_time: response.data.end_time,\r\n                        stadium: response.data.stadium\r\n                    }]\r\n                )\r\n            })\r\n    }\r\n\r\n    const addUser = (e) => {\r\n        e['event'] = clickEventID\r\n        console.log(e)\r\n        axios.post(\"https://api.dreampotential.org/bookingstadium/user/assign/\", e)\r\n            .then(response => {\r\n                setMyEventsList([])\r\n                fetchEvents()\r\n            })\r\n    }\r\n\r\n\r\n    const fetchEvents = () => {\r\n        // setMyEventsList([]);\r\n        axios.get('https://api.dreampotential.org/bookingstadium/api/bookings')\r\n            .then(response => {\r\n                    console.log(response.data)\r\n                    response.data.forEach((response, index) => {\r\n                        let date = response.date.split('-')\r\n                        let year = parseInt(date[0])\r\n                        let month = parseInt(date[1]) - 1\r\n                        let day = parseInt(date[2])\r\n\r\n                        console.log(year, month, day)\r\n\r\n                        setMyEventsList(\r\n                            prevData => [...prevData, {\r\n                                id: response.id,\r\n                                start: new Date(year, month, day),\r\n                                end: new Date(year, month, day),\r\n                                title: response.name,\r\n                                email: response.email,\r\n                                phone: response.phone,\r\n                                date: response.date,\r\n                                start_time: response.start_time,\r\n                                end_time: response.end_time,\r\n                                stadium: response.stadium,\r\n                                total_users: response.total_users\r\n\r\n                            }]\r\n                        )\r\n                    })\r\n                }\r\n            )\r\n    }\r\n    useEffect(() => {\r\n        fetchEvents()\r\n    }, [])\r\n\r\n\r\n    const [clickEventID, setClickEventID] = React.useState('')\r\n    const [clickEventName, setClickEventName] = React.useState('')\r\n    const [clickEventEmail, setClickEventEmail] = React.useState('')\r\n    const [clickEventPhone, setClickEventPhone] = React.useState('')\r\n    const [clickEventDate, setClickEventDate] = React.useState(null)\r\n    const [clickEventStartTime, setClickEventStartTime] = React.useState(null)\r\n    const [clickEventEndTime, setClickEventEndTime] = React.useState(null)\r\n    const [clickEventTotalUsers, setClickEventTotalUsers] = React.useState(null)\r\n    const [clickEventStadium, setClickEventStadium] = React.useState(null)\r\n    \r\n    const [eventModalVisible, setEventModalVisible] = React.useState(false)\r\n    const [eventConfirmLoading, setEventConfirmLoading] = React.useState(false);\r\n\r\n    const handleEventOk = () => {\r\n        setEventConfirmLoading(true);\r\n        setEventModalVisible(false);\r\n        setEventConfirmLoading(false);\r\n    };\r\n\r\n    const handleEventCancel = () => {\r\n        setEventModalVisible(false);\r\n    };\r\n\r\n    const handleEventClick = (event) => {\r\n        console.log(event)\r\n        setClickEventID(event.id)\r\n        setEventModalVisible(true);\r\n        setClickEventName(event.title)\r\n        setClickEventEmail(event.email)\r\n        setClickEventPhone(event.phone)\r\n        setClickEventDate(event.date)\r\n        setClickEventStartTime(event.start_time)\r\n        setClickEventEndTime(event.end_time)\r\n        setClickEventTotalUsers(event.total_users)\r\n        setClickEventStadium(event.stadium)\r\n    }\r\n\r\n\r\n    const [userModalVisible, setUserModalVisible] = React.useState(false);\r\n    const [userConfirmLoading, setUserConfirmLoading] = React.useState(false);\r\n\r\n    const handleUserOk = () => {\r\n        setUserConfirmLoading(true);\r\n        setUserModalVisible(false);\r\n        setUserConfirmLoading(false);\r\n    };\r\n\r\n    const handleUserCancel = () => {\r\n        setUserModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Calendar\r\n                selectable={true}\r\n                localizer={localizer}\r\n                events={myEventsList}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{height: 500}}\r\n                onSelectEvent={event => handleEventClick(event)}\r\n                onSelectSlot={(data) => handleClick(data)}\r\n            />\r\n\r\n            <Modal\r\n                title=\"Add event\"\r\n                visible={visible}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n            >\r\n                <AddForm clickedDate={clickedDate} addEvent={addEvent} modalVisible={setVisible}/>\r\n            </Modal>\r\n\r\n            <Modal\r\n                title=\"Event\"\r\n                visible={eventModalVisible}\r\n                onOk={handleEventOk}\r\n                confirmLoading={eventConfirmLoading}\r\n                onCancel={handleEventCancel}\r\n            >\r\n                <p><b>Event:</b> {clickEventName}</p>\r\n                <p><b>Email:</b> {clickEventEmail}</p>\r\n                <p><b>Phone:</b> {clickEventPhone}</p>\r\n                <p><b>Date:</b> {clickEventDate}</p>\r\n                <p><b>Start Time:</b> {clickEventStartTime}</p>\r\n                <p><b>End Time:</b> {clickEventEndTime}</p>\r\n                 <p><b>Stadium:</b> {clickEventStadium}</p>\r\n                <p><b>{clickEventTotalUsers}</b> user are attending</p>\r\n                <button onClick={() => {\r\n                    setUserModalVisible(true)\r\n                }} className={\"btn btn-primary\"}>Attend\r\n                </button>\r\n\r\n\r\n            </Modal>\r\n\r\n            <Modal\r\n                title=\"Attend Event\"\r\n                visible={userModalVisible}\r\n                onOk={handleUserOk}\r\n                confirmLoading={userConfirmLoading}\r\n                onCancel={handleUserCancel}\r\n            >\r\n                <AddUser addUser={addUser} setClickEventTotalUsers={setClickEventTotalUsers}\r\n                         clickEventTotalUsers={clickEventTotalUsers} setUserModalVisible={setUserModalVisible}/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}